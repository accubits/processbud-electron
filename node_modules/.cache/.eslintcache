[{"C:\\Users\\leela\\OneDrive\\Desktop\\pb-angular-electron-main\\21-06-2021\\processbud\\src\\index.js":"1","C:\\Users\\leela\\OneDrive\\Desktop\\pb-angular-electron-main\\21-06-2021\\processbud\\src\\App.js":"2","C:\\Users\\leela\\OneDrive\\Desktop\\pb-angular-electron-main\\21-06-2021\\processbud\\src\\reportWebVitals.js":"3","C:\\Users\\leela\\OneDrive\\Desktop\\pb-angular-electron-main\\21-06-2021\\processbud\\src\\screens\\dashboard.js":"4","C:\\Users\\leela\\OneDrive\\Desktop\\pb-angular-electron-main\\21-06-2021\\processbud\\src\\components\\drawer-head-tools.js":"5","C:\\Users\\leela\\OneDrive\\Desktop\\pb-angular-electron-main\\21-06-2021\\processbud\\src\\components\\side-nav.js":"6","C:\\Users\\leela\\OneDrive\\Desktop\\pb-angular-electron-main\\21-06-2021\\processbud\\src\\components\\sampleRete.js":"7","C:\\Users\\leela\\OneDrive\\Desktop\\pb-angular-electron-main\\21-06-2021\\processbud\\src\\components\\actions.js":"8","C:\\Users\\leela\\OneDrive\\Desktop\\pb-angular-electron-main\\21-06-2021\\processbud\\src\\components\\properties.js":"9","C:\\Users\\leela\\OneDrive\\Desktop\\pb-angular-electron-main\\21-06-2021\\processbud\\src\\components\\btngroup.js":"10","C:\\Users\\leela\\OneDrive\\Desktop\\pb-angular-electron-main\\21-06-2021\\processbud\\src\\components\\player-btns.js":"11","C:\\Users\\leela\\OneDrive\\Desktop\\pb-angular-electron-main\\21-06-2021\\processbud\\src\\components\\rete.jsx":"12","C:\\Users\\leela\\OneDrive\\Desktop\\pb-angular-electron-main\\21-06-2021\\processbud\\src\\components\\MyNode.jsx":"13","C:\\Users\\leela\\OneDrive\\Desktop\\pb-angular-electron-main\\21-06-2021\\processbud\\src\\components\\Centerflow.js":"14","C:\\Users\\leela\\OneDrive\\Desktop\\pb-angular-electron-main\\21-06-2021\\processbud\\src\\components\\Context\\context.js":"15"},{"size":500,"mtime":1625825978772,"results":"16","hashOfConfig":"17"},{"size":1017,"mtime":1625827692946,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1624593935000,"results":"19","hashOfConfig":"17"},{"size":1001,"mtime":1625828296350,"results":"20","hashOfConfig":"17"},{"size":293,"mtime":1624867926795,"results":"21","hashOfConfig":"17"},{"size":498,"mtime":1624595415000,"results":"22","hashOfConfig":"17"},{"size":352,"mtime":1624605936000,"results":"23","hashOfConfig":"17"},{"size":3107,"mtime":1625825384361,"results":"24","hashOfConfig":"17"},{"size":2406,"mtime":1625827899523,"results":"25","hashOfConfig":"17"},{"size":860,"mtime":1624603876000,"results":"26","hashOfConfig":"17"},{"size":872,"mtime":1624603964000,"results":"27","hashOfConfig":"17"},{"size":4607,"mtime":1624949717725,"results":"28","hashOfConfig":"17"},{"size":1676,"mtime":1624951213797,"results":"29","hashOfConfig":"17"},{"size":7583,"mtime":1625827709174,"results":"30","hashOfConfig":"17"},{"size":79,"mtime":1625825889919,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1m4ah99",{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"C:\\Users\\leela\\OneDrive\\Desktop\\pb-angular-electron-main\\21-06-2021\\processbud\\src\\index.js",[],"C:\\Users\\leela\\OneDrive\\Desktop\\pb-angular-electron-main\\21-06-2021\\processbud\\src\\App.js",["69"],"C:\\Users\\leela\\OneDrive\\Desktop\\pb-angular-electron-main\\21-06-2021\\processbud\\src\\reportWebVitals.js",[],["70","71"],"C:\\Users\\leela\\OneDrive\\Desktop\\pb-angular-electron-main\\21-06-2021\\processbud\\src\\screens\\dashboard.js",["72"],"C:\\Users\\leela\\OneDrive\\Desktop\\pb-angular-electron-main\\21-06-2021\\processbud\\src\\components\\drawer-head-tools.js",[],"C:\\Users\\leela\\OneDrive\\Desktop\\pb-angular-electron-main\\21-06-2021\\processbud\\src\\components\\side-nav.js",["73"],"import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\nimport profilePic from '../images/profile-pic.jpg'\n\nfunction SideNav() {\n    return <nav className=\"side-nav\">\n        <FontAwesomeIcon icon={faBars} color=\"white\" />\n        <div className=\"user-section\">\n            <img src={profilePic} className=\"profile-pic\" />\n            <span className=\"user-name\">Mekha</span>\n        </div>\n    </nav>\n}\n\nexport default SideNav;","C:\\Users\\leela\\OneDrive\\Desktop\\pb-angular-electron-main\\21-06-2021\\processbud\\src\\components\\sampleRete.js",["74","75","76"],"import React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { useRete } from \"./rete\";\n\n\nfunction Editor() {\n  const [setContainer] = useRete();\n\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        height: \"100%\"\n      }}\n      ref={(ref) => ref && setContainer(ref)}\n    />\n  );\n}\n\nexport default Editor;","C:\\Users\\leela\\OneDrive\\Desktop\\pb-angular-electron-main\\21-06-2021\\processbud\\src\\components\\actions.js",["77"],"import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport Draggable from \"react-draggable\";\nimport actions from './action.json';\n\nfunction Actions() {\n//     const actions = [{\n//         id: 1,\n//         name: 'Open Browser',\n//         desc: 'Triggers browser open action'\n//     }, {\n//         id: 2,\n//         name: 'Close Browser',\n//         desc: 'Triggers browser close action'\n//     }, {\n//         id: 3,\n//         name: 'Set SMTP',\n//         desc: 'Triggers browser open action'\n//     },  {\n//         id: 4,\n//         idname: \"horizontal\",\n//         sourcePosition: \"right\",\n//         type: \"InputNode2\",\n//         targetPosition: \"left\",\n//         name: \"Set SMTP\",\n//         style: {\n//             background: \"#fff\",\n//             width: 200,\n//             fontSize: \"20px\",\n//             fontFamily: \"Helvetica\",\n//             boxShadow: \"5px 5px 5px 0px rgba(0,0,0,.10)\"\n//         }\n//     }\n// ]\n\n    // const onDragStart = (event, nodeType) => {\n    //     event.dataTransfer.setData(\"application/reactflow\", nodeType);\n    //     event.dataTransfer.effectAllowed = \"move\";\n    //   };\n\n    const onDragStart = (event, nodeType) => {\n        event.dataTransfer.setData(\"application/reactflow\", nodeType);\n        event.dataTransfer.effectAllowed = \"move\";\n    };\n\n    return <div className=\"actions\">\n        <div className=\"actions-header\">\n            <h1 className=\"actions-title\">Actions</h1>\n            <span className=\"tag\">Drag a new action</span>\n        </div>\n        <div className=\"actions-search\">\n            <input type=\"text\" className=\"search-input\" />\n            <div className=\"search-icon\">\n                <FontAwesomeIcon icon={faSearch} color=\"grey\" />\n            </div>\n\n        </div>\n        <div className=\"actions-list\">\n\n            <div className=\"single-action-container\">\n                <h1 className=\"actions-list-title\">Frequently Used</h1>\n                {actions.map((action, i) => (\n                    <div key={action.Name} className=\"single-action\" onDragStart={(event) => onDragStart(event,`${i+1}`)}\n                    draggable\n                    >\n                        <h4 className=\"single-action-title\">{action.Name}</h4>\n                        <span className=\"single-action-desc\">{action.desc}</span>\n                    </div>\n\n                ))}\n            </div>\n\n            <div className=\"single-action-container\">\n                <h1 className=\"actions-list-title\">All Actions</h1>\n                {actions.map((action, i) => (\n                    \n                        <div key={action.Name} className=\"single-action\" onDragStart={(event) => onDragStart(event,`${i+1}`)}\n                        draggable>\n                            <h4 className=\"single-action-title\">{action.Name}</h4>\n                            <span className=\"single-action-desc\">{action.desc}</span>\n                        </div>\n                    \n                ))}\n\n            </div>\n        </div>\n\n    </div>\n}\n\nexport default Actions;","C:\\Users\\leela\\OneDrive\\Desktop\\pb-angular-electron-main\\21-06-2021\\processbud\\src\\components\\properties.js",["78","79"],"import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft, faArrowRight, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { useContext, useEffect, useState } from 'react';\nimport { AuthContext } from './Context/context';\n\n\n\nfunction Properties(props) {\n\n    const { dispatch } = useContext(AuthContext);\n    const [host,setHost]=useState(\"\");\n\n    useEffect(()=>{\n        if(props.host){\n            setHost(props.host);\n        }\n        else{\n            setHost(\"\");\n        }\n    },[])\n\n    return <div className=\"properties\" >\n        <span className=\"arrow-toggle\">\n            <FontAwesomeIcon icon={faArrowLeft} color=\"#3aa273\" />\n        </span>\n        <h1 className=\"properties-title\">Properties</h1>\n        <section className=\"single-property-container\">\n            <div className=\"single-property-title-container\">\n                <h2 className=\"single-property-container-title\">Set SMTP</h2>\n                <FontAwesomeIcon icon={faTrash} color=\"red\" />\n            </div>\n            <div className=\"property\">\n                <h4>Server Settings</h4>\n                <div class=\"form-group\">\n                    <label className=\"form-label\">Host</label>\n                    <input type=\"text\" value={host&&host} name=\"host\" className=\"form-control\" />\n                </div>\n                <div class=\"form-group\">\n                    <label className=\"form-label\">Port</label>\n                    <input type=\"text\" name=\"port\" className=\"form-control\" />\n                </div>\n            </div>\n\n            <div className=\"property\">\n                <h4>Credentials</h4>\n                <div class=\"form-group\">\n                    <label className=\"form-label\">User Id</label>\n                    <input type=\"text\" name=\"host\" className=\"form-control\" />\n                </div>\n                <div class=\"form-group\">\n                    <label className=\"form-label\">Password</label>\n                    <input type=\"password\" name=\"host\" className=\"form-control\" />\n                </div>\n            </div>\n\n            <div className=\"btn-property-group\">\n                <button className=\"btn btn-cancel\"  onClick={()=>{setHost(\"\"); dispatch({type:\"propertiesClose\"});}} >Cancel</button>\n                <button className=\"btn btn-apply\">Apply</button>\n            </div>\n\n        </section>\n    </div>\n}\n\nexport default Properties;","C:\\Users\\leela\\OneDrive\\Desktop\\pb-angular-electron-main\\21-06-2021\\processbud\\src\\components\\btngroup.js",[],"C:\\Users\\leela\\OneDrive\\Desktop\\pb-angular-electron-main\\21-06-2021\\processbud\\src\\components\\player-btns.js",[],"C:\\Users\\leela\\OneDrive\\Desktop\\pb-angular-electron-main\\21-06-2021\\processbud\\src\\components\\rete.jsx",["80","81","82","83"],"import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport Rete from \"rete\";\nimport ReactRenderPlugin from \"rete-react-render-plugin\";\nimport ConnectionPlugin from \"rete-connection-plugin\";\nimport AreaPlugin from \"rete-area-plugin\";\nimport { MyNode } from \"./MyNode\";\n\nvar numSocket = new Rete.Socket(\"Number value\");\n\nclass NumControl extends Rete.Control {\n  static component = ({ value, onChange }) => (\n    <input\n      type=\"number\"\n      value={value}\n      ref={(ref) => {\n        ref && ref.addEventListener(\"pointerdown\", (e) => e.stopPropagation());\n      }}\n      onChange={(e) => onChange(+e.target.value)}\n    />\n  );\n\n  constructor(emitter, key, node, readonly = false) {\n    super(key);\n    this.emitter = emitter;\n    this.key = key;\n    this.component = NumControl.component;\n\n    const initial = node.data[key] || 0;\n\n    node.data[key] = initial;\n    this.props = {\n      readonly,\n      value: initial,\n      onChange: (v) => {\n        this.setValue(v);\n        this.emitter.trigger(\"process\");\n      }\n    };\n  }\n\n  setValue(val) {\n    this.props.value = val;\n    this.putData(this.key, val);\n    this.update();\n  }\n}\n\nclass NumComponent extends Rete.Component {\n  constructor() {\n    super(\"Number\");\n  }\n\n  builder(node) {\n    var out1 = new Rete.Output(\"num\", \"Number\", numSocket);\n    var out2 = new Rete.Output(\"num1\", \"Number\", numSocket);\n    var ctrl = new NumControl(this.editor, \"num\", node);\n    var ctr2 = new NumControl(this.editor, \"num1\", node);\n\n    return node.addControl(ctrl).addOutput(out1);\n    return node.addControl(ctr2).addOutput(out2);\n  }\n\n  worker(node, inputs, outputs) {\n    outputs[\"num\"] = node.data.num;\n    outputs[\"num1\"] = node.data.num1;\n  }\n}\n\nclass AddComponent extends Rete.Component {\n  constructor() {\n    super(\"Add\");\n    this.data.component = MyNode; // optional\n  }\n\n  builder(node) {\n    var inp1 = new Rete.Input(\"num1\", \"Number\", numSocket);\n    var inp2 = new Rete.Input(\"num2\", \"Number2\", numSocket);\n    var out = new Rete.Output(\"num\", \"Number\", numSocket);\n    var out1 = new Rete.Output(\"num1\", \"Number\", numSocket);\n\n    inp1.addControl(new NumControl(this.editor, \"num1\", node));\n    inp2.addControl(new NumControl(this.editor, \"num2\", node));\n\n    return node\n      .addInput(inp1)\n      .addInput(inp2)\n      .addControl(new NumControl(this.editor, \"preview\", node, true))\n      .addOutput(out)\n      .addOutput(out1);\n  }\n\n  worker(node, inputs, outputs) {\n    var n1 = inputs[\"num1\"].length ? inputs[\"num1\"][0] : node.data.num1;\n    var n2 = inputs[\"num2\"].length ? inputs[\"num2\"][0] : node.data.num2;\n    var sum = n1 + n2;\n\n    this.editor.nodes\n      .find((n) => n.id == node.id)\n      .controls.get(\"preview\")\n      .setValue(sum);\n    outputs[\"num\"] = sum;\n    outputs[\"num1\"] = sum;\n  }\n}\n\nexport async function createEditor(container) {\n  var components = [new NumComponent(), new AddComponent()];\n\n  var editor = new Rete.NodeEditor(\"demo@0.1.0\", container);\n  editor.use(ConnectionPlugin);\n  editor.use(ReactRenderPlugin);\n\n  var engine = new Rete.Engine(\"demo@0.1.0\");\n\n  components.map((c) => {\n    editor.register(c);\n    engine.register(c);\n  });\n\n  var n1 = await components[0].createNode({ num: 2 });\n  var n2 = await components[0].createNode({ num: 3 });\n  var add = await components[1].createNode();\n  var add2 = await components[1].createNode();\n\n  n1.position = [80, 200];\n  n2.position = [80, 400];\n  add.position = [500, 240];\n  add2.position = [1000, 480];\n\n  editor.addNode(n1);\n  editor.addNode(n2);\n  editor.addNode(add);\n  editor.addNode(add2);\n\n  editor.connect(n1.outputs.get(\"num\"), add.inputs.get(\"num1\"));\n  editor.connect(n2.outputs.get(\"num\"), add.inputs.get(\"num2\"));\n  editor.connect(add.outputs.get(\"num\"), add2.inputs.get(\"num2\"));\n\n  editor.on(\n    \"process nodecreated noderemoved connectioncreated connectionremoved\",\n    async () => {\n      console.log(\"process\");\n      await engine.abort();\n      await engine.process(editor.toJSON());\n    }\n  );\n\n  editor.view.resize();\n  editor.trigger(\"process\");\n  AreaPlugin.zoomAt(editor, editor.nodes);\n\n  return editor;\n}\n\nexport function useRete() {\n  const [container, setContainer] = useState(null);\n  const editorRef = useRef();\n\n  useEffect(() => {\n    if (container) {\n      createEditor(container).then((value) => {\n        console.log(\"created\");\n        editorRef.current = value;\n      });\n    }\n  }, [container]);\n\n  useEffect(() => {\n    return () => {\n      if (editorRef.current) {\n        console.log(\"destroy\");\n        editorRef.current.destroy();\n      }\n    };\n  }, []);\n\n  return [setContainer];\n}\n","C:\\Users\\leela\\OneDrive\\Desktop\\pb-angular-electron-main\\21-06-2021\\processbud\\src\\components\\MyNode.jsx",[],"C:\\Users\\leela\\OneDrive\\Desktop\\pb-angular-electron-main\\21-06-2021\\processbud\\src\\components\\Centerflow.js",["84","85","86","87","88","89"],"import React, { useState, useRef, useContext } from \"react\";\r\nimport ReactFlow, { ReactFlowProvider, addEdge, removeElements, Controls, Handle } from \"react-flow-renderer\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlay, faStop, faArrowDown, faEdit, faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport actions from \"./action.json\"\r\nimport Properties from \"./properties\";\r\n\r\n\r\nimport \"./Centerflow.css\";\r\nimport Actions from \"./actions\";\r\nimport { AuthContext } from \"./Context/context\";\r\n\r\n\r\nconst InputNode = ({ type, data }) => {\r\n  // const [showResults, setShowResults] = React.useState(false)\r\n\r\n  // // const onClick = () => setShowResults(true)\r\n\r\n  // const openBrowser = async()=>{\r\n  //   setShowResults(!showResults);\r\n  // }\r\n  const { dispatch } = useContext(AuthContext);\r\n\r\n\r\n  return (\r\n    <>\r\n      <Handle type=\"target\" position=\"left\" />\r\n      \r\n      <div className=\"box-container node-1 input\"  onClick={()=>dispatch({type:\"propertiesOpen\"})}>\r\n        <ul>\r\n          <li>Open Browser</li>\r\n          <li>\r\n            <FontAwesomeIcon icon={faEdit} color=\"#D6D9DE\" />\r\n            <span>EDIT</span> &nbsp;&nbsp;&nbsp;\r\n            <FontAwesomeIcon icon={faTrash} color=\"#D6D9DE\" />\r\n            <span>DELETE</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <Handle type=\"source\" position=\"left\" id=\"a\" />\r\n\r\n     \r\n    </>\r\n  );\r\n\r\n};\r\n\r\nconst InputNode2 = ({ type, data }) => {\r\n  const { dispatch } = useContext(AuthContext);\r\n  return (\r\n    <>\r\n      <Handle type=\"target\" position=\"left\"  />\r\n      <div className=\"box-container node-2 output\"  onClick={()=>dispatch({type:\"propertiesCloseOpen\"})}>\r\n        <ul>\r\n          <li>Close Browser</li>\r\n          <li>\r\n            <FontAwesomeIcon icon={faEdit} color=\"#D6D9DE\" />\r\n            <span>EDIT</span> &nbsp;&nbsp;&nbsp;\r\n            <FontAwesomeIcon icon={faTrash} color=\"#D6D9DE\" />\r\n            <span>DELETE</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <Handle type=\"source\" position=\"right\" id=\"a\" />\r\n    </>\r\n  );\r\n\r\n};\r\n\r\nconst InputNode3 = ({ type, data }) => {\r\n  return (\r\n    <>\r\n      <Handle type=\"target\" position=\"left\" />\r\n      <div className=\"box-container node-3\">\r\n        <ul>\r\n          <li>Set SMTP</li>\r\n          <li>\r\n            <FontAwesomeIcon icon={faEdit} color=\"#D6D9DE\" />\r\n            <span>EDIT</span> &nbsp;&nbsp;&nbsp;\r\n            <FontAwesomeIcon icon={faTrash} color=\"#D6D9DE\" />\r\n            <span>DELETE</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <Handle type=\"source\" position=\"right\" id=\"a\" />\r\n    </>\r\n  );\r\n\r\n};\r\n\r\nconst InputNode4 = ({ type, data }) => {\r\n  return (\r\n    <>\r\n      <Handle type=\"target\" position=\"left\" />\r\n      <div className=\"box-container node-4\">\r\n        <ul>\r\n          <li>Set SMTP</li>\r\n          <li>\r\n            <FontAwesomeIcon icon={faEdit} color=\"#D6D9DE\" />\r\n            <span>EDIT</span> &nbsp;&nbsp;&nbsp;\r\n            <FontAwesomeIcon icon={faTrash} color=\"#D6D9DE\" />\r\n            <span>DELETE</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <Handle type=\"source\" position=\"right\" id=\"a\" />\r\n    </>\r\n  );\r\n\r\n};\r\n\r\nconst nodeTypes = {\r\n  InputNode: InputNode,\r\n  InputNode2: InputNode2,\r\n  InputNode3: InputNode3,\r\n  InputNode4: InputNode4,\r\n};\r\n\r\nconst initialElements = [\r\n  // {\r\n  //   id: 'horizontal-1',\r\n  //   sourcePosition: 'right',\r\n  //   type: 'InputNode',\r\n  //   className: 'dark-node',\r\n  //   data: {},\r\n  //   position: { x: 0, y: 50 },\r\n  //   animated:true,\r\n  //   style: { background: \"#fff\", width: 200, fontSize: \"20px\", fontFamily: \"Helvetica\", boxShadow: \"5px 5px 5px 0px rgba(0,0,0,.10)\" }\r\n  // },\r\n\r\n  // {\r\n  //   id: 'horizontal-2',\r\n  //   sourcePosition: 'right',\r\n  //   type: 'InputNode2',\r\n  //   targetPosition: 'left',\r\n  //   data: { label: 'Set SMTP' },\r\n  //   position: { x: 300, y: 50 },\r\n  //   style: { background: \"#fff\", width: 200, fontSize: \"20px\", fontFamily: \"Helvetica\", boxShadow: \"5px 5px 5px 0px rgba(0,0,0,.10)\" }\r\n  // },\r\n\r\n  // {\r\n  //   id: 'horizontal-3',\r\n  //   sourcePosition: 'right',\r\n  //   type: 'InputNode3',\r\n  //   targetPosition: 'left',\r\n  //   data: { label: 'Set SMTP' },\r\n  //   position: { x: 650, y: 25 },\r\n  //   style: { background: \"#fff\", width: 200, fontSize: \"20px\", fontFamily: \"Helvetica\", boxShadow: \"5px 5px 5px 0px rgba(0,0,0,.10)\" }\r\n  // },\r\n  // {\r\n  //   id: 'horizontal-4',\r\n  //   sourcePosition: 'right',\r\n  //   type: 'InputNode4',\r\n  //   targetPosition: 'left',\r\n  //   data: { label: 'Set SMTP' },\r\n  //   position: { x: 650, y: 200 },\r\n  //   style: { background: \"#fff\", width: 200, fontSize: \"20px\", fontFamily: \"Helvetica\", boxShadow: \"5px 5px 5px 0px rgba(0,0,0,.10)\" }\r\n  // },\r\n  // {\r\n  //   id: 'horizontal-e1-3',\r\n  //   source: 'horizontal-1',\r\n  //   type: 'smoothstep',\r\n  //   target: 'horizontal-2',\r\n  //   animated: true,\r\n  // },\r\n\r\n  // {\r\n  //   id: 'horizontal-e3-5',\r\n  //   source: 'horizontal-2',\r\n  //   type: 'smoothstep',\r\n  //   target: 'horizontal-3',\r\n  //   animated: true,\r\n  // },\r\n  // {\r\n  //   id: 'horizontal-e3-6',\r\n  //   source: 'horizontal-2',\r\n  //   type: 'smoothstep',\r\n  //   target: 'horizontal-4',\r\n  //   animated: true,\r\n  // },\r\n\r\n];\r\n\r\n\r\nlet id = 0;\r\nconst getId = () => `${id++}`;\r\n\r\nexport default function App() {\r\n\r\n  const reactFlowWrapper = useRef(null);\r\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\r\n  const [elements, setElements] = useState(initialElements);\r\n  const onConnect = (params) => setElements((els) => addEdge(params, els));\r\n  const onElementsRemove = (elementsToRemove) =>\r\n    setElements((els) => removeElements(elementsToRemove, els));\r\n  const onLoad = (_reactFlowInstance) =>\r\n    setReactFlowInstance(_reactFlowInstance);\r\n  const onDragOver = (event) => {\r\n    event.preventDefault();\r\n    event.dataTransfer.dropEffect = \"move\";\r\n  };\r\n\r\n  // const InputTypee = async() =>{\r\n\r\n  // }\r\n\r\n  const onDrop = async(event) => {\r\n    event.preventDefault();\r\n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\r\n    const types = event.dataTransfer.getData(\"application/reactflow\");\r\n    const position = reactFlowInstance.project({\r\n      x: event.clientX - reactFlowBounds.left,\r\n      y: event.clientY - reactFlowBounds.top\r\n    });\r\n    const findIndex= await actions.findIndex(x=> Number(x.id)===Number(types));\r\n    let { idname, sourcePosition, targetPosition, Name, style, type, className,animated, properties, desc } =actions[findIndex]\r\n    const newNode = {\r\n      id: `${idname}-${elements.length}`,\r\n      type,\r\n      sourcePosition,\r\n      targetPosition,\r\n      position,\r\n      animated,\r\n      className,\r\n      data: { label: `${Name} ` },\r\n      style,\r\n      properties,\r\n      desc\r\n    };\r\n    setElements((es) => es.concat(newNode));\r\n    console.log(elements, event.dataTransfer.getData(\"application/reactflow\"), \"elements\")\r\n  };\r\n  return (\r\n    <div className=\"dndflow\">\r\n      <ReactFlowProvider>\r\n        \r\n        <div\r\n          className=\"reactflow-wrapper\"\r\n          style={{ height: \"900px\", width: \"780px\" }}\r\n          ref={reactFlowWrapper}\r\n        >\r\n          <ReactFlow\r\n            elements={elements}\r\n            onConnect={onConnect}\r\n            onElementsRemove={onElementsRemove}\r\n            onLoad={onLoad}\r\n            onDrop={onDrop}\r\n            onDragOver={onDragOver}\r\n            nodeTypes={nodeTypes}\r\n          >\r\n            <Controls />\r\n          </ReactFlow>\r\n        </div>\r\n      </ReactFlowProvider>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\leela\\OneDrive\\Desktop\\pb-angular-electron-main\\21-06-2021\\processbud\\src\\components\\Context\\context.js",[],{"ruleId":"90","severity":1,"message":"91","line":1,"column":8,"nodeType":"92","messageId":"93","endLine":1,"endColumn":12},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"90","severity":1,"message":"98","line":1,"column":22,"nodeType":"92","messageId":"93","endLine":1,"endColumn":31},{"ruleId":"99","severity":1,"message":"100","line":9,"column":13,"nodeType":"101","endLine":9,"endColumn":61},{"ruleId":"90","severity":1,"message":"98","line":1,"column":17,"nodeType":"92","messageId":"93","endLine":1,"endColumn":26},{"ruleId":"90","severity":1,"message":"102","line":1,"column":28,"nodeType":"92","messageId":"93","endLine":1,"endColumn":36},{"ruleId":"90","severity":1,"message":"103","line":2,"column":8,"nodeType":"92","messageId":"93","endLine":2,"endColumn":16},{"ruleId":"90","severity":1,"message":"104","line":3,"column":8,"nodeType":"92","messageId":"93","endLine":3,"endColumn":17},{"ruleId":"90","severity":1,"message":"105","line":2,"column":23,"nodeType":"92","messageId":"93","endLine":2,"endColumn":35},{"ruleId":"106","severity":1,"message":"107","line":20,"column":7,"nodeType":"108","endLine":20,"endColumn":9,"suggestions":"109"},{"ruleId":"90","severity":1,"message":"110","line":1,"column":38,"nodeType":"92","messageId":"93","endLine":1,"endColumn":49},{"ruleId":"111","severity":1,"message":"112","line":60,"column":5,"nodeType":"113","messageId":"114","endLine":60,"endColumn":50},{"ruleId":"115","severity":1,"message":"116","line":98,"column":25,"nodeType":"117","messageId":"118","endLine":98,"endColumn":27},{"ruleId":"119","severity":1,"message":"120","line":115,"column":22,"nodeType":"121","messageId":"122","endLine":115,"endColumn":24},{"ruleId":"90","severity":1,"message":"123","line":4,"column":10,"nodeType":"92","messageId":"93","endLine":4,"endColumn":16},{"ruleId":"90","severity":1,"message":"124","line":4,"column":18,"nodeType":"92","messageId":"93","endLine":4,"endColumn":24},{"ruleId":"90","severity":1,"message":"125","line":4,"column":26,"nodeType":"92","messageId":"93","endLine":4,"endColumn":37},{"ruleId":"90","severity":1,"message":"126","line":6,"column":8,"nodeType":"92","messageId":"93","endLine":6,"endColumn":18},{"ruleId":"90","severity":1,"message":"127","line":10,"column":8,"nodeType":"92","messageId":"93","endLine":10,"endColumn":15},{"ruleId":"90","severity":1,"message":"128","line":186,"column":7,"nodeType":"92","messageId":"93","endLine":186,"endColumn":12},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-native-reassign",["129"],"no-negated-in-lhs",["130"],"'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'ReactDOM' is defined but never used.","'Draggable' is defined but never used.","'faArrowRight' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.host'. Either include it or remove the dependency array. If 'setHost' needs the current value of 'props.host', you can also switch to useReducer instead of useState and read 'props.host' in the reducer.","ArrayExpression",["131"],"'useCallback' is defined but never used.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'faPlay' is defined but never used.","'faStop' is defined but never used.","'faArrowDown' is defined but never used.","'Properties' is defined but never used.","'Actions' is defined but never used.","'getId' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"132","fix":"133"},"Update the dependencies array to be: [props.host]",{"range":"134","text":"135"},[525,527],"[props.host]"]