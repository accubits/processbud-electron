{"ast":null,"code":"/*!\n* rete-react-render-plugin v0.2.1 \n* (c) 2020  \n* Released under the ISC license.\n*/\nfunction ___$insertStyle(css) {\n  if (!css) {\n    return;\n  }\n\n  if (typeof window === 'undefined') {\n    return;\n  }\n\n  var style = document.createElement('style');\n  style.setAttribute('type', 'text/css');\n  style.innerHTML = css;\n  document.head.appendChild(style);\n  return css;\n}\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction kebab(str) {\n  var replace = function replace(s) {\n    return s.toLowerCase().replace(/ /g, '-');\n  };\n\n  return Array.isArray(str) ? str.map(replace) : replace(str);\n}\n\nvar Control = /*#__PURE__*/function (_React$Component) {\n  _inherits(Control, _React$Component);\n\n  function Control() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Control);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Control)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"createRef\", function (el) {\n      var _this$props = _this.props,\n          innerRef = _this$props.innerRef,\n          control = _this$props.control;\n      el && innerRef(el, control);\n    });\n\n    return _this;\n  }\n\n  _createClass(Control, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          className = _this$props2.className,\n          control = _this$props2.control;\n      return React.createElement(\"div\", {\n        className: className,\n        title: control.key,\n        ref: this.createRef\n      });\n    }\n  }]);\n\n  return Control;\n}(React.Component);\n\nvar Socket = /*#__PURE__*/function (_React$Component) {\n  _inherits(Socket, _React$Component);\n\n  function Socket() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Socket);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Socket)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"createRef\", function (el) {\n      var _this$props = _this.props,\n          innerRef = _this$props.innerRef,\n          type = _this$props.type,\n          io = _this$props.io;\n      el && innerRef(el, type, io);\n    });\n\n    return _this;\n  }\n\n  _createClass(Socket, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          socket = _this$props2.socket,\n          type = _this$props2.type;\n      return React.createElement(\"div\", {\n        className: \"socket \".concat(type, \" \").concat(kebab(socket.name)),\n        title: socket.name,\n        ref: function ref(el) {\n          return _this2.createRef(el);\n        } // force update for new IO with a same key \n\n      });\n    }\n  }]);\n\n  return Socket;\n}(React.Component);\n\n___$insertStyle(\".node {\\n  background: rgba(110, 136, 255, 0.8);\\n  border: 2px solid #4e58bf;\\n  border-radius: 10px;\\n  cursor: pointer;\\n  min-width: 180px;\\n  height: auto;\\n  padding-bottom: 6px;\\n  box-sizing: content-box;\\n  position: relative;\\n  user-select: none;\\n}\\n.node:hover {\\n  background: rgba(130, 153, 255, 0.8);\\n}\\n.node.selected {\\n  background: #ffd92c;\\n  border-color: #e3c000;\\n}\\n.node .title {\\n  color: white;\\n  font-family: sans-serif;\\n  font-size: 18px;\\n  padding: 8px;\\n}\\n.node .output {\\n  text-align: right;\\n}\\n.node .input {\\n  text-align: left;\\n}\\n.node .input-title, .node .output-title {\\n  vertical-align: middle;\\n  color: white;\\n  display: inline-block;\\n  font-family: sans-serif;\\n  font-size: 14px;\\n  margin: 6px;\\n  line-height: 24px;\\n}\\n.node .input-control {\\n  z-index: 1;\\n  width: calc(100% - 36px);\\n  vertical-align: middle;\\n  display: inline-block;\\n}\\n.node .control {\\n  padding: 6px 18px;\\n}\\n\\n.socket {\\n  display: inline-block;\\n  cursor: pointer;\\n  border: 1px solid white;\\n  border-radius: 12px;\\n  width: 24px;\\n  height: 24px;\\n  margin: 6px;\\n  vertical-align: middle;\\n  background: #96b38a;\\n  z-index: 2;\\n  box-sizing: border-box;\\n}\\n.socket:hover {\\n  border-width: 4px;\\n}\\n.socket.multiple {\\n  border-color: yellow;\\n}\\n.socket.output {\\n  margin-right: -12px;\\n}\\n.socket.input {\\n  margin-left: -12px;\\n}\");\n\nvar Node = /*#__PURE__*/function (_React$Component) {\n  _inherits(Node, _React$Component);\n\n  function Node() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Node);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Node)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {});\n\n    return _this;\n  }\n\n  _createClass(Node, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          node = _this$props.node,\n          bindSocket = _this$props.bindSocket,\n          bindControl = _this$props.bindControl;\n      var _this$state = this.state,\n          outputs = _this$state.outputs,\n          controls = _this$state.controls,\n          inputs = _this$state.inputs,\n          selected = _this$state.selected;\n      return React.createElement(\"div\", {\n        className: \"node \".concat(selected, \" \").concat(kebab(node.name))\n      }, React.createElement(\"div\", {\n        className: \"title\"\n      }, node.name), outputs.map(function (output) {\n        return React.createElement(\"div\", {\n          className: \"output\",\n          key: output.key\n        }, React.createElement(\"div\", {\n          className: \"output-title\"\n        }, output.name), React.createElement(Socket, {\n          type: \"output\",\n          socket: output.socket,\n          io: output,\n          innerRef: bindSocket\n        }));\n      }), controls.map(function (control) {\n        return React.createElement(Control, {\n          className: \"control\",\n          key: control.key,\n          control: control,\n          innerRef: bindControl\n        });\n      }), inputs.map(function (input) {\n        return React.createElement(\"div\", {\n          className: \"input\",\n          key: input.key\n        }, React.createElement(Socket, {\n          type: \"input\",\n          socket: input.socket,\n          io: input,\n          innerRef: bindSocket\n        }), !input.showControl() && React.createElement(\"div\", {\n          className: \"input-title\"\n        }, input.name), input.showControl() && React.createElement(Control, {\n          className: \"input-control\",\n          control: input.control,\n          innerRef: bindControl\n        }));\n      }));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(_ref) {\n      var node = _ref.node,\n          editor = _ref.editor;\n      return {\n        outputs: Array.from(node.outputs.values()),\n        controls: Array.from(node.controls.values()),\n        inputs: Array.from(node.inputs.values()),\n        selected: editor.selected.contains(node) ? 'selected' : ''\n      };\n    }\n  }]);\n\n  return Node;\n}(React.Component);\n\nfunction install(editor, _ref) {\n  var _ref$component = _ref.component,\n      NodeComponent = _ref$component === void 0 ? Node : _ref$component;\n  editor.on('rendernode', function (_ref2) {\n    var el = _ref2.el,\n        node = _ref2.node,\n        component = _ref2.component,\n        bindSocket = _ref2.bindSocket,\n        bindControl = _ref2.bindControl;\n    if (component.render && component.render !== 'react') return;\n    var Component = component.component || NodeComponent;\n\n    node.update = function () {\n      return new Promise(function (res) {\n        ReactDOM.render(React.createElement(Component, {\n          node: node,\n          editor: editor,\n          bindSocket: bindSocket,\n          bindControl: bindControl\n        }), el, res);\n      });\n    };\n\n    node._reactComponent = true;\n    node.update();\n  });\n  editor.on('rendercontrol', function (_ref3) {\n    var el = _ref3.el,\n        control = _ref3.control;\n    if (control.render && control.render !== 'react') return;\n    var Component = control.component;\n\n    control.update = function () {\n      return new Promise(function (res) {\n        ReactDOM.render(React.createElement(Component, control.props), el, res);\n      });\n    };\n\n    control.update();\n  });\n  editor.on('connectioncreated connectionremoved', function (connection) {\n    connection.output.node.update();\n    connection.input.node.update();\n  });\n  editor.on('nodeselected', function () {\n    editor.nodes.filter(function (n) {\n      return n._reactComponent;\n    }).map(function (node) {\n      return node.update();\n    });\n  });\n}\n\nvar index = {\n  name: 'react-render',\n  install: install\n};\nexport default index;\nexport { Control, Node, Socket };","map":{"version":3,"sources":["../src/utils.js","../src/Control.jsx","../src/Socket.jsx","../src/Node.jsx","../src/index.jsx"],"names":["replace","s","Array","str","Control","React","innerRef","control","el","className","createRef","Socket","type","io","socket","kebab","Node","node","editor","outputs","controls","inputs","selected","bindSocket","bindControl","output","key","input","component","NodeComponent","Component","ReactDOM","connection","n","name","install"],"mappings":"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","sourcesContent":["export function kebab(str) {\n    const replace = s => s.toLowerCase().replace(/ /g, '-');\n\n    return Array.isArray(str) ? str.map(replace) : replace(str);\n}","/* eslint-disable react/prop-types */\nimport React from 'react';\n\nexport class Control extends React.Component {\n    createRef = el => {\n        const { innerRef, control } = this.props;\n    \n        el && innerRef(el, control);\n    };\n\n    render() {\n        const { className, control } = this.props;\n\n        return (\n            <div\n                className={className}\n                title={control.key}\n                ref={this.createRef}\n            />\n        )\n    }\n}","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { kebab } from './utils';\n\nexport class Socket extends React.Component {\n    createRef = el => {\n        const { innerRef, type, io } = this.props;\n    \n        el && innerRef(el, type, io);\n    };\n\n    render () {\n        const { socket, type } = this.props;\n\n        return (\n            <div\n                className={`socket ${type} ${kebab(socket.name)}`}\n                title={socket.name}\n                ref={el => this.createRef(el)} // force update for new IO with a same key \n            />\n        )\n    }\n}","/* eslint-disable sort-imports */\n/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { kebab } from './utils';\nimport { Control } from './Control';\nimport { Socket } from './Socket';\nimport './styles.sass';\n\nexport class Node extends React.Component {\n    state = {}\n\n    static getDerivedStateFromProps({ node, editor }) {\n        return {\n            outputs: Array.from(node.outputs.values()),\n            controls: Array.from(node.controls.values()),\n            inputs: Array.from(node.inputs.values()),\n            selected: editor.selected.contains(node) ? 'selected' : ''\n        }\n    }\n    \n    render() {\n        const { node, bindSocket, bindControl } = this.props;\n        const { outputs, controls, inputs, selected } = this.state;\n\n        return (\n            <div className={`node ${selected} ${kebab(node.name)}`}>\n                <div className=\"title\">{node.name}</div>\n                {/* Outputs */}\n                {outputs.map((output) => (\n                    <div className=\"output\" key={output.key}>\n                        <div className=\"output-title\">{output.name}</div>\n                        <Socket type=\"output\" socket={output.socket} io={output} innerRef={bindSocket} />\n                    </div>\n                ))}\n                {/* Controls */}\n                {controls.map(control => (\n                    <Control className=\"control\" key={control.key} control={control} innerRef={bindControl} />\n                ))}\n                {/* Inputs */}\n                {inputs.map(input => (\n                    <div className=\"input\" key={input.key}>\n                        <Socket type=\"input\" socket={input.socket} io={input} innerRef={bindSocket} />\n                        {!input.showControl() && <div className=\"input-title\">{input.name}</div>}\n                        {input.showControl() && <Control className=\"input-control\" control={input.control} innerRef={bindControl} />}\n                    </div>\n                ))}\n            </div>\n        )\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Node } from './Node';\n\nfunction install(editor, { component: NodeComponent = Node }) {\n    editor.on('rendernode', ({ el, node, component, bindSocket, bindControl }) => {\n        if (component.render && component.render !== 'react') return;\n        const Component = component.component || NodeComponent;\n\n        node.update = () => new Promise((res) => {\n            ReactDOM.render(<Component node={node} editor={editor} bindSocket={bindSocket} bindControl={bindControl} />, el, res)\n        });\n        node._reactComponent = true;\n        node.update();\n    });\n\n    editor.on('rendercontrol', ({ el, control }) => {\n        if (control.render && control.render !== 'react') return;\n        const Component = control.component;\n\n        control.update = () => new Promise((res) => {\n            ReactDOM.render(<Component {...control.props} />, el, res)\n        });\n        control.update();\n    });\n\n    editor.on('connectioncreated connectionremoved', connection => {\n        connection.output.node.update();\n        connection.input.node.update();\n    });\n\n    editor.on('nodeselected', () => {\n        editor.nodes.filter(n => n._reactComponent).map(node => node.update());\n    });\n}\n\nexport { Node } from './Node';\nexport { Socket } from './Socket';\nexport { Control } from './Control';\n\nexport default {\n    name: 'react-render',\n    install\n}"]},"metadata":{},"sourceType":"module"}