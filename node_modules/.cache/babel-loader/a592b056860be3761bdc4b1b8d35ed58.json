{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leela\\\\OneDrive\\\\Desktop\\\\pb-angular-electron-main\\\\21-06-2021\\\\processbud\\\\src\\\\components\\\\Centerflow.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport ReactFlow, { ReactFlowProvider, addEdge, removeElements, Controls } from \"react-flow-renderer\";\nimport \"./Centerflow.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst InputNode = ({\n  type,\n  data\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Handle, {\n      type: \"target\",\n      position: \"left\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), \"type: \", type, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), \"value:\", data.value, /*#__PURE__*/_jsxDEV(Handle, {\n      type: \"source\",\n      position: \"right\",\n      id: \"a\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = InputNode;\nconst nodeTypes = {\n  InputNode: InputNode\n};\nconst initialElements = [{\n  id: 'horizontal-1',\n  sourcePosition: 'right',\n  type: 'input',\n  className: 'dark-node',\n  data: {\n    label: 'Open Browser'\n  },\n  position: {\n    x: 0,\n    y: 50\n  },\n  style: {\n    background: \"#fff\",\n    width: 200,\n    fontSize: \"20px\",\n    fontFamily: \"Helvetica\",\n    boxShadow: \"5px 5px 5px 0px rgba(0,0,0,.10)\"\n  }\n}, {\n  id: 'horizontal-2',\n  sourcePosition: 'right',\n  targetPosition: 'left',\n  data: {\n    label: 'Set SMTP'\n  },\n  position: {\n    x: 300,\n    y: 50\n  },\n  style: {\n    background: \"#fff\",\n    width: 200,\n    fontSize: \"20px\",\n    fontFamily: \"Helvetica\",\n    boxShadow: \"5px 5px 5px 0px rgba(0,0,0,.10)\"\n  }\n}, {\n  id: 'horizontal-3',\n  sourcePosition: 'right',\n  targetPosition: 'left',\n  data: {\n    label: 'Set SMTP'\n  },\n  position: {\n    x: 650,\n    y: 25\n  },\n  style: {\n    background: \"#fff\",\n    width: 200,\n    fontSize: \"20px\",\n    fontFamily: \"Helvetica\",\n    boxShadow: \"5px 5px 5px 0px rgba(0,0,0,.10)\"\n  }\n}, {\n  id: 'horizontal-4',\n  sourcePosition: 'right',\n  targetPosition: 'left',\n  data: {\n    label: 'Set SMTP'\n  },\n  position: {\n    x: 650,\n    y: 100\n  },\n  style: {\n    background: \"#fff\",\n    width: 200,\n    fontSize: \"20px\",\n    fontFamily: \"Helvetica\",\n    boxShadow: \"5px 5px 5px 0px rgba(0,0,0,.10)\"\n  }\n}, {\n  id: 'horizontal-e1-3',\n  source: 'horizontal-1',\n  type: 'smoothstep',\n  target: 'horizontal-2',\n  animated: true\n}, {\n  id: 'horizontal-e3-5',\n  source: 'horizontal-2',\n  type: 'smoothstep',\n  target: 'horizontal-3',\n  animated: true\n}, {\n  id: 'horizontal-e3-6',\n  source: 'horizontal-2',\n  type: 'smoothstep',\n  target: 'horizontal-4',\n  animated: true\n}];\nlet id = 0;\n\nconst getId = () => `dndnode_${id++}`;\n\nexport default function App() {\n  _s();\n\n  const reactFlowWrapper = useRef(null);\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\n  const [elements, setElements] = useState(initialElements);\n\n  const onConnect = params => setElements(els => addEdge(params, els));\n\n  const onElementsRemove = elementsToRemove => setElements(els => removeElements(elementsToRemove, els));\n\n  const onLoad = _reactFlowInstance => setReactFlowInstance(_reactFlowInstance);\n\n  const onDragOver = event => {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = \"move\";\n  };\n\n  const onDrop = event => {\n    event.preventDefault();\n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\n    const type = event.dataTransfer.getData(\"application/reactflow\");\n    const position = reactFlowInstance.project({\n      x: event.clientX - reactFlowBounds.left,\n      y: event.clientY - reactFlowBounds.top\n    });\n    const newNode = {\n      id: getId(),\n      type,\n      position,\n      data: {\n        label: `${type} node`\n      }\n    };\n    setElements(es => es.concat(newNode));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dndflow\",\n    children: /*#__PURE__*/_jsxDEV(ReactFlowProvider, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reactflow-wrapper\",\n        style: {\n          height: \"300px\",\n          width: \"780px\"\n        },\n        ref: reactFlowWrapper,\n        children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n          elements: elements,\n          onConnect: onConnect,\n          onElementsRemove: onElementsRemove,\n          onLoad: onLoad,\n          onDrop: onDrop,\n          onDragOver: onDragOver,\n          children: /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"t0Pmcgj3+nKbdYNPuwo8wbQmUCM=\");\n\n_c2 = App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"InputNode\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["C:/Users/leela/OneDrive/Desktop/pb-angular-electron-main/21-06-2021/processbud/src/components/Centerflow.js"],"names":["React","useState","useRef","ReactFlow","ReactFlowProvider","addEdge","removeElements","Controls","InputNode","type","data","value","nodeTypes","initialElements","id","sourcePosition","className","label","position","x","y","style","background","width","fontSize","fontFamily","boxShadow","targetPosition","source","target","animated","getId","App","reactFlowWrapper","reactFlowInstance","setReactFlowInstance","elements","setElements","onConnect","params","els","onElementsRemove","elementsToRemove","onLoad","_reactFlowInstance","onDragOver","event","preventDefault","dataTransfer","dropEffect","onDrop","reactFlowBounds","current","getBoundingClientRect","getData","project","clientX","left","clientY","top","newNode","es","concat","height"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport ReactFlow, { ReactFlowProvider, addEdge, removeElements, Controls } from \"react-flow-renderer\";\r\n\r\nimport \"./Centerflow.css\";\r\n\r\nconst InputNode = ({ type, data }) => {\r\n  return (\r\n    <>\r\n      <Handle type=\"target\" position=\"left\" />\r\n      type: {type}\r\n      <br />\r\n      value:{data.value}\r\n      <Handle type=\"source\" position=\"right\" id=\"a\" />\r\n    </>\r\n  );\r\n};\r\n\r\nconst nodeTypes = {\r\n  InputNode: InputNode,\r\n};\r\n\r\nconst initialElements = [\r\n  {\r\n    id: 'horizontal-1',\r\n    sourcePosition: 'right',\r\n    type: 'input',\r\n    className: 'dark-node',\r\n    data: { label: 'Open Browser'},\r\n    position: { x: 0, y: 50 },\r\n    style: {background: \"#fff\",width: 200, fontSize: \"20px\",fontFamily: \"Helvetica\", boxShadow: \"5px 5px 5px 0px rgba(0,0,0,.10)\"}\r\n  },\r\n  \r\n  {\r\n    id: 'horizontal-2',\r\n    sourcePosition: 'right',\r\n    targetPosition: 'left',\r\n    data: { label: 'Set SMTP' },\r\n    position: { x: 300, y: 50 },\r\n    style: {background: \"#fff\",width: 200, fontSize: \"20px\",fontFamily: \"Helvetica\", boxShadow: \"5px 5px 5px 0px rgba(0,0,0,.10)\"}\r\n  },\r\n  \r\n  {\r\n    id: 'horizontal-3',\r\n    sourcePosition: 'right',\r\n    targetPosition: 'left',\r\n    data: { label: 'Set SMTP' },\r\n    position: { x: 650, y: 25 },\r\n    style: {background: \"#fff\",width: 200, fontSize: \"20px\",fontFamily: \"Helvetica\", boxShadow: \"5px 5px 5px 0px rgba(0,0,0,.10)\"}\r\n  },\r\n  {\r\n    id: 'horizontal-4',\r\n    sourcePosition: 'right',\r\n    targetPosition: 'left',\r\n    data: { label: 'Set SMTP' },\r\n    position: { x: 650, y: 100 },\r\n    style: {background: \"#fff\",width: 200, fontSize: \"20px\",fontFamily: \"Helvetica\", boxShadow: \"5px 5px 5px 0px rgba(0,0,0,.10)\"}\r\n  },\r\n\r\n  {\r\n    id: 'horizontal-e1-3',\r\n    source: 'horizontal-1',\r\n    type: 'smoothstep',\r\n    target: 'horizontal-2',\r\n    animated: true,\r\n  },\r\n  \r\n  {\r\n    id: 'horizontal-e3-5',\r\n    source: 'horizontal-2',\r\n    type: 'smoothstep',\r\n    target: 'horizontal-3',\r\n    animated: true,\r\n  },\r\n  {\r\n    id: 'horizontal-e3-6',\r\n    source: 'horizontal-2',\r\n    type: 'smoothstep',\r\n    target: 'horizontal-4',\r\n    animated: true,\r\n  },\r\n  \r\n];\r\nlet id = 0;\r\nconst getId = () => `dndnode_${id++}`;\r\n\r\nexport default function App() {\r\n  const reactFlowWrapper = useRef(null);\r\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\r\n  const [elements, setElements] = useState(initialElements);\r\n  const onConnect = (params) => setElements((els) => addEdge(params, els));\r\n  const onElementsRemove = (elementsToRemove) =>\r\n    setElements((els) => removeElements(elementsToRemove, els));\r\n  const onLoad = (_reactFlowInstance) =>\r\n    setReactFlowInstance(_reactFlowInstance);\r\n  const onDragOver = (event) => {\r\n    event.preventDefault();\r\n    event.dataTransfer.dropEffect = \"move\";\r\n  };\r\n  const onDrop = (event) => {\r\n    event.preventDefault();\r\n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\r\n    const type = event.dataTransfer.getData(\"application/reactflow\");\r\n    const position = reactFlowInstance.project({\r\n      x: event.clientX - reactFlowBounds.left,\r\n      y: event.clientY - reactFlowBounds.top\r\n    });\r\n    const newNode = {\r\n      id: getId(),\r\n      type,\r\n      position,\r\n      data: { label: `${type} node` }\r\n    };\r\n    setElements((es) => es.concat(newNode));\r\n  };\r\n  return (\r\n    <div className=\"dndflow\">\r\n      <ReactFlowProvider>\r\n        <div\r\n          className=\"reactflow-wrapper\"\r\n          style={{ height: \"300px\", width: \"780px\" }}\r\n          ref={reactFlowWrapper}\r\n        >\r\n          <ReactFlow\r\n            elements={elements}\r\n            onConnect={onConnect}\r\n            onElementsRemove={onElementsRemove}\r\n            onLoad={onLoad}\r\n            onDrop={onDrop}\r\n            onDragOver={onDragOver}\r\n          >\r\n            <Controls />\r\n          </ReactFlow>\r\n        </div>\r\n        \r\n      </ReactFlowProvider>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}