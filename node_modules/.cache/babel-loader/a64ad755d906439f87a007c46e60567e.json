{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leela\\\\OneDrive\\\\Desktop\\\\pb-angular-electron-main\\\\21-06-2021\\\\processbud\\\\src\\\\components\\\\rete.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport Rete from \"rete\";\nimport ReactRenderPlugin from \"rete-react-render-plugin\";\nimport ConnectionPlugin from \"rete-connection-plugin\";\nimport AreaPlugin from \"rete-area-plugin\";\nimport { MyNode } from \"./MyNode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar numSocket = new Rete.Socket(\"Number value\");\n\nclass NumControl extends Rete.Control {\n  constructor(emitter, key, node, readonly = false) {\n    super(key);\n    this.emitter = emitter;\n    this.key = key;\n    this.component = NumControl.component;\n    const initial = node.data[key] || 0;\n    node.data[key] = initial;\n    this.props = {\n      readonly,\n      value: initial,\n      onChange: v => {\n        this.setValue(v);\n        this.emitter.trigger(\"process\");\n      }\n    };\n  }\n\n  setValue(val) {\n    this.props.value = val;\n    this.putData(this.key, val);\n    this.update();\n  }\n\n}\n\nNumControl.component = ({\n  value,\n  onChange\n}) => /*#__PURE__*/_jsxDEV(\"input\", {\n  type: \"number\",\n  value: value,\n  ref: ref => {\n    ref && ref.addEventListener(\"pointerdown\", e => e.stopPropagation());\n  },\n  onChange: e => onChange(+e.target.value)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 5\n}, NumControl);\n\nclass NumComponent extends Rete.Component {\n  constructor() {\n    super(\"Number\");\n  }\n\n  builder(node) {\n    var out1 = new Rete.Output(\"num\", \"Number\", numSocket);\n    var ctrl = new NumControl(this.editor, \"num\", node);\n    return node.addControl(ctrl).addOutput(out1);\n  }\n\n  worker(node, inputs, outputs) {\n    outputs[\"num\"] = node.data.num;\n  }\n\n}\n\nclass AddComponent extends Rete.Component {\n  constructor() {\n    super(\"Add\");\n    this.data.component = MyNode; // optional\n  }\n\n  builder(node) {\n    var inp1 = new Rete.Input(\"num1\", \"Number\", numSocket);\n    var inp2 = new Rete.Input(\"num2\", \"Number2\", numSocket);\n    var inp3 = new Rete.Input(\"num3\", \"Number3\", numSocket);\n    var out = new Rete.Output(\"num\", \"Number\", numSocket);\n    inp1.addControl(new NumControl(this.editor, \"num1\", node));\n    inp2.addControl(new NumControl(this.editor, \"num2\", node));\n    inp3.addControl(new NumControl(this.editor, \"num3\", node));\n    return node.addInput(inp1).addInput(inp2).addInput(inp3).addControl(new NumControl(this.editor, \"preview\", node, true)).addOutput(out);\n  }\n\n  worker(node, inputs, outputs) {\n    var n1 = inputs[\"num1\"].length ? inputs[\"num1\"][0] : node.data.num1;\n    var n2 = inputs[\"num2\"].length ? inputs[\"num2\"][0] : node.data.num2;\n    var n3 = inputs[\"num3\"].length ? inputs[\"num3\"][0] : node.data.num3;\n    var sum = n1 + n2 + n3;\n    this.editor.nodes.find(n => n.id == node.id).controls.get(\"preview\").setValue(sum);\n    outputs[\"num\"] = sum;\n  }\n\n}\n\nexport async function createEditor(container) {\n  var components = [new NumComponent(), new AddComponent()];\n  var editor = new Rete.NodeEditor(\"demo@0.1.0\", container);\n  editor.use(ConnectionPlugin);\n  editor.use(ReactRenderPlugin);\n  var engine = new Rete.Engine(\"demo@0.1.0\");\n  components.map(c => {\n    editor.register(c);\n    engine.register(c);\n  });\n  var n1 = await components[0].createNode({\n    num: 2\n  });\n  var n2 = await components[0].createNode({\n    num: 3\n  });\n  var n3 = await components[0].createNode({\n    num: 4\n  });\n  var add = await components[1].createNode();\n  n1.position = [80, 200];\n  n2.position = [80, 400];\n  n3.position = [80, 600];\n  add.position = [500, 240];\n  editor.addNode(n1);\n  editor.addNode(n2);\n  editor.addNode(n3);\n  editor.addNode(add);\n  editor.connect(n1.outputs.get(\"num\"), add.inputs.get(\"num1\"));\n  editor.connect(n2.outputs.get(\"num\"), add.inputs.get(\"num2\"));\n  editor.connect(n3.outputs.get(\"num\"), add.inputs.get(\"num3\"));\n  editor.on(\"process nodecreated noderemoved connectioncreated connectionremoved\", async () => {\n    console.log(\"process\");\n    await engine.abort();\n    await engine.process(editor.toJSON());\n  });\n  editor.view.resize();\n  editor.trigger(\"process\");\n  AreaPlugin.zoomAt(editor, editor.nodes);\n  return editor;\n}\nexport function useRete() {\n  _s();\n\n  const [container, setContainer] = useState(null);\n  const editorRef = useRef();\n  useEffect(() => {\n    if (container) {\n      createEditor(container).then(value => {\n        console.log(\"created\");\n        editorRef.current = value;\n      });\n    }\n  }, [container]);\n  useEffect(() => {\n    return () => {\n      if (editorRef.current) {\n        console.log(\"destroy\");\n        editorRef.current.destroy();\n      }\n    };\n  }, []);\n  return [setContainer];\n}\n\n_s(useRete, \"0OuBfB0wYFIOYgxG172r2AeQiN8=\");","map":{"version":3,"sources":["C:/Users/leela/OneDrive/Desktop/pb-angular-electron-main/21-06-2021/processbud/src/components/rete.jsx"],"names":["React","useState","useEffect","useCallback","useRef","Rete","ReactRenderPlugin","ConnectionPlugin","AreaPlugin","MyNode","numSocket","Socket","NumControl","Control","constructor","emitter","key","node","readonly","component","initial","data","props","value","onChange","v","setValue","trigger","val","putData","update","ref","addEventListener","e","stopPropagation","target","NumComponent","Component","builder","out1","Output","ctrl","editor","addControl","addOutput","worker","inputs","outputs","num","AddComponent","inp1","Input","inp2","inp3","out","addInput","n1","length","num1","n2","num2","n3","num3","sum","nodes","find","n","id","controls","get","createEditor","container","components","NodeEditor","use","engine","Engine","map","c","register","createNode","add","position","addNode","connect","on","console","log","abort","process","toJSON","view","resize","zoomAt","useRete","setContainer","editorRef","then","current","destroy"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport Rete from \"rete\";\nimport ReactRenderPlugin from \"rete-react-render-plugin\";\nimport ConnectionPlugin from \"rete-connection-plugin\";\nimport AreaPlugin from \"rete-area-plugin\";\nimport { MyNode } from \"./MyNode\";\n\nvar numSocket = new Rete.Socket(\"Number value\");\n\nclass NumControl extends Rete.Control {\n  static component = ({ value, onChange }) => (\n    <input\n      type=\"number\"\n      value={value}\n      ref={(ref) => {\n        ref && ref.addEventListener(\"pointerdown\", (e) => e.stopPropagation());\n      }}\n      onChange={(e) => onChange(+e.target.value)}\n    />\n  );\n\n  constructor(emitter, key, node, readonly = false) {\n    super(key);\n    this.emitter = emitter;\n    this.key = key;\n    this.component = NumControl.component;\n\n    const initial = node.data[key] || 0;\n\n    node.data[key] = initial;\n    this.props = {\n      readonly,\n      value: initial,\n      onChange: (v) => {\n        this.setValue(v);\n        this.emitter.trigger(\"process\");\n      }\n    };\n  }\n\n  setValue(val) {\n    this.props.value = val;\n    this.putData(this.key, val);\n    this.update();\n  }\n}\n\nclass NumComponent extends Rete.Component {\n  constructor() {\n    super(\"Number\");\n  }\n\n  builder(node) {\n    var out1 = new Rete.Output(\"num\", \"Number\", numSocket);\n    var ctrl = new NumControl(this.editor, \"num\", node);\n\n    return node.addControl(ctrl).addOutput(out1);\n  }\n\n  worker(node, inputs, outputs) {\n    outputs[\"num\"] = node.data.num;\n  }\n}\n\nclass AddComponent extends Rete.Component {\n  constructor() {\n    super(\"Add\");\n    this.data.component = MyNode; // optional\n  }\n\n  builder(node) {\n    var inp1 = new Rete.Input(\"num1\", \"Number\", numSocket);\n    var inp2 = new Rete.Input(\"num2\", \"Number2\", numSocket);\n    var inp3 = new Rete.Input(\"num3\", \"Number3\", numSocket);\n    var out = new Rete.Output(\"num\", \"Number\", numSocket);\n\n    inp1.addControl(new NumControl(this.editor, \"num1\", node));\n    inp2.addControl(new NumControl(this.editor, \"num2\", node));\n    inp3.addControl(new NumControl(this.editor, \"num3\", node));\n\n    return node\n      .addInput(inp1)\n      .addInput(inp2)\n      .addInput(inp3)\n      .addControl(new NumControl(this.editor, \"preview\", node, true))\n      .addOutput(out);\n  }\n\n  worker(node, inputs, outputs) {\n    var n1 = inputs[\"num1\"].length ? inputs[\"num1\"][0] : node.data.num1;\n    var n2 = inputs[\"num2\"].length ? inputs[\"num2\"][0] : node.data.num2;\n    var n3 = inputs[\"num3\"].length ? inputs[\"num3\"][0] : node.data.num3;\n    var sum = n1 + n2 + n3;\n\n    this.editor.nodes\n      .find((n) => n.id == node.id)\n      .controls.get(\"preview\")\n      .setValue(sum);\n    outputs[\"num\"] = sum;\n  }\n}\n\nexport async function createEditor(container) {\n  var components = [new NumComponent(), new AddComponent()];\n\n  var editor = new Rete.NodeEditor(\"demo@0.1.0\", container);\n  editor.use(ConnectionPlugin);\n  editor.use(ReactRenderPlugin);\n\n  var engine = new Rete.Engine(\"demo@0.1.0\");\n\n  components.map((c) => {\n    editor.register(c);\n    engine.register(c);\n  });\n\n  var n1 = await components[0].createNode({ num: 2 });\n  var n2 = await components[0].createNode({ num: 3 });\n  var n3 = await components[0].createNode({ num: 4 });\n  var add = await components[1].createNode();\n\n  n1.position = [80, 200];\n  n2.position = [80, 400];\n  n3.position = [80, 600];\n  add.position = [500, 240];\n\n  editor.addNode(n1);\n  editor.addNode(n2);\n  editor.addNode(n3);\n  editor.addNode(add);\n\n  editor.connect(n1.outputs.get(\"num\"), add.inputs.get(\"num1\"));\n  editor.connect(n2.outputs.get(\"num\"), add.inputs.get(\"num2\"));\n  editor.connect(n3.outputs.get(\"num\"), add.inputs.get(\"num3\"));\n\n  editor.on(\n    \"process nodecreated noderemoved connectioncreated connectionremoved\",\n    async () => {\n      console.log(\"process\");\n      await engine.abort();\n      await engine.process(editor.toJSON());\n    }\n  );\n\n  editor.view.resize();\n  editor.trigger(\"process\");\n  AreaPlugin.zoomAt(editor, editor.nodes);\n\n  return editor;\n}\n\nexport function useRete() {\n  const [container, setContainer] = useState(null);\n  const editorRef = useRef();\n\n  useEffect(() => {\n    if (container) {\n      createEditor(container).then((value) => {\n        console.log(\"created\");\n        editorRef.current = value;\n      });\n    }\n  }, [container]);\n\n  useEffect(() => {\n    return () => {\n      if (editorRef.current) {\n        console.log(\"destroy\");\n        editorRef.current.destroy();\n      }\n    };\n  }, []);\n\n  return [setContainer];\n}\n"]},"metadata":{},"sourceType":"module"}