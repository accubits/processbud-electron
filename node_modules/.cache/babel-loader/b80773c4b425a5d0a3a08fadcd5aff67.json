{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leela\\\\OneDrive\\\\Desktop\\\\pb-angular-electron-main\\\\21-06-2021\\\\processbud\\\\src\\\\components\\\\actions.js\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport Draggable from \"react-draggable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Actions() {\n  const actions = [{\n    id: 1,\n    name: 'Open Browser',\n    desc: 'Triggers browser open action'\n  }, {\n    id: 2,\n    name: 'Close Browser',\n    desc: 'Triggers browser close action'\n  }, {\n    id: 3,\n    name: 'Set SMTP',\n    desc: 'Triggers browser open action'\n  }]; // const onDragStart = (event, nodeType) => {\n  //     event.dataTransfer.setData(\"application/reactflow\", nodeType);\n  //     event.dataTransfer.effectAllowed = \"move\";\n  //   };\n\n  const onDragStart = (event, nodeType) => {\n    event.dataTransfer.setData(\"application/reactflow\", nodeType);\n    event.dataTransfer.effectAllowed = \"move\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"actions\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actions-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"actions-title\",\n        children: \"Actions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"tag\",\n        children: \"Drag a new action\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actions-search\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-icon\",\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faSearch,\n          color: \"grey\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actions-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"single-action-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"actions-list-title\",\n          children: \"Frequently Used\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this), actions.map((action, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"single-action\",\n          onDragStart: event => onDragStart(event, \"output\"),\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"single-action-title\",\n            children: action.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"single-action-desc\",\n            children: action.desc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)]\n        }, action.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"single-action-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"actions-list-title\",\n          children: \"All Actions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this), actions.map((action, i) => /*#__PURE__*/_jsxDEV(Draggable, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"single-action\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"single-action-title\",\n              children: action.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"single-action-desc\",\n              children: action.desc\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this)]\n          }, action.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 12\n  }, this);\n}\n\n_c = Actions;\nexport default Actions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Actions\");","map":{"version":3,"sources":["C:/Users/leela/OneDrive/Desktop/pb-angular-electron-main/21-06-2021/processbud/src/components/actions.js"],"names":["FontAwesomeIcon","faSearch","Draggable","Actions","actions","id","name","desc","onDragStart","event","nodeType","dataTransfer","setData","effectAllowed","map","action","i"],"mappings":"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","sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport Draggable from \"react-draggable\"\n\nfunction Actions() {\n    const actions = [{\n        id: 1,\n        name: 'Open Browser',\n        desc: 'Triggers browser open action'\n    }, {\n        id: 2,\n        name: 'Close Browser',\n        desc: 'Triggers browser close action'\n    }, {\n        id: 3,\n        name: 'Set SMTP',\n        desc: 'Triggers browser open action'\n    }]\n\n    // const onDragStart = (event, nodeType) => {\n    //     event.dataTransfer.setData(\"application/reactflow\", nodeType);\n    //     event.dataTransfer.effectAllowed = \"move\";\n    //   };\n\n      const onDragStart = (event, nodeType) => {\n        event.dataTransfer.setData(\"application/reactflow\", nodeType);\n        event.dataTransfer.effectAllowed = \"move\";\n      };\n\n    return <div className=\"actions\">\n        <div className=\"actions-header\">\n            <h1 className=\"actions-title\">Actions</h1>\n            <span className=\"tag\">Drag a new action</span>\n        </div>\n        <div className=\"actions-search\">\n            <input type=\"text\" className=\"search-input\" />\n            <div className=\"search-icon\">\n                <FontAwesomeIcon icon={faSearch} color=\"grey\" />\n            </div>\n\n        </div>\n        <div className=\"actions-list\">\n\n            <div className=\"single-action-container\">\n                <h1 className=\"actions-list-title\">Frequently Used</h1>\n                {actions.map((action, i) => (\n                        <div key={action.name} className=\"single-action\"         onDragStart={(event) => onDragStart(event, \"output\")}\n                        >\n                        <h4 className=\"single-action-title\">{action.name}</h4>\n                        <span className=\"single-action-desc\">{action.desc}</span>\n                    </div>\n                    \n                ))}\n            </div>\n\n            <div className=\"single-action-container\">\n                <h1 className=\"actions-list-title\">All Actions</h1>\n                {actions.map((action, i) => (\n                    <Draggable>\n                        <div key={action.name} className=\"single-action\">\n                            <h4 className=\"single-action-title\">{action.name}</h4>\n                            <span className=\"single-action-desc\">{action.desc}</span>\n                        </div>\n                    </Draggable>\n                ))}\n\n            </div>\n        </div>\n\n    </div>\n}\n\nexport default Actions;"]},"metadata":{},"sourceType":"module"}