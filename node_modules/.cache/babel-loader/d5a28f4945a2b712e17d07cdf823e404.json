{"ast":null,"code":"/*!\n* rete-area-plugin v0.2.1 \n* (c) 2019  \n* Released under the ISC license.\n*/\nfunction ___$insertStyle(css) {\n  if (!css) {\n    return;\n  }\n\n  if (typeof window === 'undefined') {\n    return;\n  }\n\n  var style = document.createElement('style');\n  style.setAttribute('type', 'text/css');\n  style.innerHTML = css;\n  document.head.appendChild(style);\n  return css;\n}\n\n___$insertStyle(\".rete-background {\\n  display: table;\\n  z-index: -1;\\n  position: absolute;\\n  top: -320000px;\\n  left: -320000px;\\n  width: 640000px;\\n  height: 640000px;\\n}\\n.rete-background.default {\\n  background-size: 32px 32px;\\n  background-image: linear-gradient(to right, #ccc 1px, transparent 1px), linear-gradient(to bottom, #ccc 1px, transparent 1px);\\n}\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nvar Background = function Background(editor, element) {\n  _classCallCheck(this, Background);\n\n  if (!element) return;\n  var el = element instanceof HTMLElement ? element : document.createElement('div');\n  el.classList += \" rete-background \".concat(element === true ? 'default' : '');\n  editor.view.area.appendChild(el);\n};\n\nvar Restrictor = /*#__PURE__*/function () {\n  function Restrictor(editor, scaleExtent, translateExtent) {\n    _classCallCheck(this, Restrictor);\n\n    this.editor = editor;\n    this.scaleExtent = scaleExtent;\n    this.translateExtent = translateExtent;\n    if (scaleExtent) editor.on('zoom', this.restrictZoom.bind(this));\n    if (translateExtent) editor.on('translate', this.restrictTranslate.bind(this));\n  }\n\n  _createClass(Restrictor, [{\n    key: \"restrictZoom\",\n    value: function restrictZoom(data) {\n      var se = typeof this.scaleExtent === 'boolean' ? {\n        min: 0.1,\n        max: 1\n      } : this.scaleExtent;\n      var tr = data.transform;\n      if (data.zoom < se.min) data.zoom = se.min;else if (data.zoom > se.max) data.zoom = se.max;\n    }\n  }, {\n    key: \"restrictTranslate\",\n    value: function restrictTranslate(data) {\n      var te = typeof this.translateExtent === 'boolean' ? {\n        width: 5000,\n        height: 4000\n      } : this.translateExtent;\n      var container = this.editor.view.container;\n      var k = data.transform.k;\n      var kw = te.width * k,\n          kh = te.height * k;\n      var cx = container.clientWidth / 2;\n      var cy = container.clientHeight / 2;\n      data.x -= cx;\n      data.y -= cy;\n      if (data.x > kw) data.x = kw;else if (data.x < -kw) data.x = -kw;\n      if (data.y > kh) data.y = kh;else if (data.y < -kh) data.y = -kh;\n      data.x += cx;\n      data.y += cy;\n    }\n  }]);\n\n  return Restrictor;\n}();\n\nvar SnapGrid = /*#__PURE__*/function () {\n  function SnapGrid(editor, _ref) {\n    var _this = this;\n\n    var _ref$size = _ref.size,\n        size = _ref$size === void 0 ? 16 : _ref$size,\n        _ref$dynamic = _ref.dynamic,\n        dynamic = _ref$dynamic === void 0 ? true : _ref$dynamic;\n\n    _classCallCheck(this, SnapGrid);\n\n    this.editor = editor;\n    this.size = size;\n    if (dynamic) this.editor.on('nodetranslate', this.onTranslate.bind(this));else this.editor.on('rendernode', function (_ref2) {\n      var node = _ref2.node,\n          el = _ref2.el;\n      el.addEventListener('mouseup', _this.onDrag.bind(_this, node));\n      el.addEventListener('touchend', _this.onDrag.bind(_this, node));\n      el.addEventListener('touchcancel', _this.onDrag.bind(_this, node));\n    });\n  }\n\n  _createClass(SnapGrid, [{\n    key: \"onTranslate\",\n    value: function onTranslate(data) {\n      var x = data.x,\n          y = data.y;\n      data.x = this.snap(x);\n      data.y = this.snap(y);\n    }\n  }, {\n    key: \"onDrag\",\n    value: function onDrag(node) {\n      var _node$position = _slicedToArray(node.position, 2),\n          x = _node$position[0],\n          y = _node$position[1];\n\n      node.position[0] = this.snap(x);\n      node.position[1] = this.snap(y);\n      console.log(this, x, y, node.position);\n      this.editor.view.nodes.get(node).update();\n      this.editor.view.updateConnections({\n        node: node\n      });\n    }\n  }, {\n    key: \"snap\",\n    value: function snap(value) {\n      return Math.round(value / this.size) * this.size;\n    }\n  }]);\n\n  return SnapGrid;\n}();\n\nvar min = function min(arr) {\n  return arr.length === 0 ? 0 : Math.min.apply(Math, _toConsumableArray(arr));\n};\n\nvar max = function max(arr) {\n  return arr.length === 0 ? 0 : Math.max.apply(Math, _toConsumableArray(arr));\n};\n\nfunction nodesBBox(editor, nodes) {\n  var left = min(nodes.map(function (node) {\n    return node.position[0];\n  }));\n  var top = min(nodes.map(function (node) {\n    return node.position[1];\n  }));\n  var right = max(nodes.map(function (node) {\n    return node.position[0] + editor.view.nodes.get(node).el.clientWidth;\n  }));\n  var bottom = max(nodes.map(function (node) {\n    return node.position[1] + editor.view.nodes.get(node).el.clientHeight;\n  }));\n  return {\n    left: left,\n    right: right,\n    top: top,\n    bottom: bottom,\n    width: Math.abs(left - right),\n    height: Math.abs(top - bottom),\n    getCenter: function getCenter() {\n      return [(left + right) / 2, (top + bottom) / 2];\n    }\n  };\n}\n\nfunction zoomAt(editor) {\n  var nodes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : editor.nodes;\n  var bbox = nodesBBox(editor, nodes);\n\n  var _bbox$getCenter = bbox.getCenter(),\n      _bbox$getCenter2 = _slicedToArray(_bbox$getCenter, 2),\n      x = _bbox$getCenter2[0],\n      y = _bbox$getCenter2[1];\n\n  var _ref = [editor.view.container.clientWidth, editor.view.container.clientHeight],\n      w = _ref[0],\n      h = _ref[1];\n  var area = editor.view.area;\n  var kw = w / bbox.width,\n      kh = h / bbox.height;\n  var k = Math.min(kh * 0.9, kw * 0.9, 1);\n  area.transform.x = area.container.clientWidth / 2 - x * k;\n  area.transform.y = area.container.clientHeight / 2 - y * k;\n  area.zoom(k, 0, 0);\n  area.update();\n}\n\nfunction install(editor, params) {\n  var background = params.background || false;\n  var snap = params.snap || false;\n  var scaleExtent = params.scaleExtent || false;\n  var translateExtent = params.translateExtent || false;\n\n  if (background) {\n    this._background = new Background(editor, background);\n  }\n\n  if (scaleExtent || translateExtent) {\n    this._restrictor = new Restrictor(editor, scaleExtent, translateExtent);\n  }\n\n  if (snap) {\n    this._snap = new SnapGrid(editor, snap);\n  }\n}\n\nvar index = {\n  install: install,\n  zoomAt: zoomAt\n};\nexport default index;","map":{"version":3,"sources":["../src/background.js","../src/restrictor.js","../src/snap.js","../src/utils.js","../src/zoom-at.js","../src/index.js"],"names":["Background","el","element","document","editor","Restrictor","se","min","max","tr","data","te","width","height","container","k","kw","kh","cx","cy","SnapGrid","size","dynamic","node","x","y","console","Math","value","arr","left","top","right","bottom","getCenter","nodes","bbox","nodesBBox","w","h","area","background","params","snap","scaleExtent","translateExtent","install","zoomAt"],"mappings":"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","sourcesContent":["export class Background {\n    constructor(editor, element) {\n        if (!element) return;\n        const el = element instanceof HTMLElement ? element : document.createElement('div');\n     \n        el.classList += ` rete-background ${element === true ? 'default' : ''}`;\n        editor.view.area.appendChild(el);\n    }\n}","export class Restrictor {\n    constructor(editor, scaleExtent, translateExtent) {\n        this.editor = editor;\n        this.scaleExtent = scaleExtent;\n        this.translateExtent = translateExtent;\n\n        if (scaleExtent)\n            editor.on('zoom', this.restrictZoom.bind(this));\n        if (translateExtent)\n            editor.on('translate', this.restrictTranslate.bind(this));\n    }\n\n    restrictZoom(data) {\n        const se = typeof this.scaleExtent === 'boolean' ? { min: 0.1, max: 1 } : this.scaleExtent;\n        const tr = data.transform;\n\n        if (data.zoom < se.min)\n            data.zoom = se.min;\n        else if (data.zoom > se.max)\n            data.zoom = se.max;\n    }\n\n    restrictTranslate(data) {\n        const te = typeof this.translateExtent === 'boolean' ? { width: 5000, height: 4000 } : this.translateExtent;\n        const { container } = this.editor.view;\n        const k = data.transform.k;\n        const [kw, kh] = [te.width * k, te.height * k];\n        const cx = container.clientWidth / 2;\n        const cy = container.clientHeight / 2;\n\n        data.x -= cx;\n        data.y -= cy;\n        \n        if (data.x > kw)\n            data.x = kw;\n        else if (data.x < - kw)\n            data.x = - kw;\n        \n        if (data.y > kh)\n            data.y = kh;\n        else if (data.y < - kh)\n            data.y = - kh;\n        \n        data.x += cx;\n        data.y += cy;\n    }\n}","export class SnapGrid {\n    constructor(editor, { size = 16, dynamic = true }) {\n        this.editor = editor;\n        this.size = size;\n\n        if (dynamic)\n            this.editor.on('nodetranslate', this.onTranslate.bind(this))\n        else\n            this.editor.on('rendernode', ({ node, el }) => {\n                el.addEventListener('mouseup', this.onDrag.bind(this, node));\n                el.addEventListener('touchend', this.onDrag.bind(this, node));\n                el.addEventListener('touchcancel', this.onDrag.bind(this, node));\n            });\n    }\n\n    onTranslate(data) {\n        const { x, y } = data;\n\n        data.x = this.snap(x);\n        data.y = this.snap(y);\n    }\n\n    onDrag(node) {\n        const [ x, y ] = node.position;\n\n        node.position[0] = this.snap(x);\n        node.position[1] = this.snap(y);\n        console.log(this, x, y, node.position)\n        \n        this.editor.view.nodes.get(node).update();\n        this.editor.view.updateConnections({ node });\n    }\n    \n    snap(value) {\n        return Math.round(value/this.size) * this.size;\n    }\n}","const min = (arr) => arr.length === 0 ? 0 : Math.min(...arr);\nconst max = (arr) => arr.length === 0 ? 0 : Math.max(...arr);\n\nexport function nodesBBox(editor, nodes) {\n    const left = min(nodes.map(node => node.position[0]));\n    const top = min(nodes.map(node => node.position[1]));\n    const right = max(nodes.map(node => node.position[0] + editor.view.nodes.get(node).el.clientWidth));\n    const bottom = max(nodes.map(node => node.position[1] + editor.view.nodes.get(node).el.clientHeight));\n    \n    return {\n        left,\n        right,\n        top,\n        bottom,\n        width: Math.abs(left - right),\n        height: Math.abs(top - bottom),\n        getCenter: () => {\n            return [\n                (left + right) / 2,\n                (top + bottom) / 2\n            ];\n        }\n    };\n}","import { nodesBBox } from './utils';\n\nexport function zoomAt(editor, nodes = editor.nodes) {\n    const bbox = nodesBBox(editor, nodes);\n    const [x, y] = bbox.getCenter();\n    const [w, h] = [editor.view.container.clientWidth, editor.view.container.clientHeight];\n    const { area } = editor.view;\n\n    var [kw, kh] = [w / bbox.width, h / bbox.height]\n    var k = Math.min(kh * 0.9, kw * 0.9, 1);\n\n    area.transform.x = area.container.clientWidth / 2 - x * k;\n    area.transform.y = area.container.clientHeight / 2 - y * k;\n    area.zoom(k, 0, 0);\n    \n    area.update();\n}","import './style.sass';\nimport { Background } from './background';\nimport { Restrictor } from './restrictor';\nimport { SnapGrid } from './snap';\nimport { zoomAt } from './zoom-at';\n\nfunction install(editor, params) {\n    let background = params.background || false;\n    let snap = params.snap || false;\n    let scaleExtent = params.scaleExtent || false;\n    let translateExtent = params.translateExtent || false;\n\n    if (background) {\n        this._background = new Background(editor, background);\n    }\n    if (scaleExtent || translateExtent) {\n        this._restrictor = new Restrictor(editor, scaleExtent, translateExtent)\n    }\n    if (snap) {\n        this._snap = new SnapGrid(editor, snap);\n    }\n}    \n\nexport default {\n    install,\n    zoomAt\n}"]},"metadata":{},"sourceType":"module"}